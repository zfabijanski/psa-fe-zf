// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Modal should render error modal type 1`] = `
.c4 {
  display: inline-block;
  cursor: inherit;
}

.c4 > svg {
  width: 120px;
  height: 100%;
  display: block;
}

.c6 {
  font-weight: 600;
  font-size: 32px;
  line-height: 40px;
}

.c2 {
  font-weight: 400;
  font-size: 16px;
  line-height: 20px;
}

.c10 {
  -webkit-text-decoration: none;
  text-decoration: none;
  outline: 0px;
  cursor: pointer;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 128px;
  max-width: 400px;
  height: 52px;
  padding-left: 32px;
  padding-right: 32px;
  font-size: 16px;
  font-weight: 700;
  line-height: 20px;
  text-align: center;
  color: #FFFFFF;
  background-color: #D13C15;
  border: 2px solid #D13C15;
}

.c10 svg g,
.c10 svg g path,
.c10 svg g circle,
.c10 svg g rect {
  stroke: #FFFFFF;
}

.c10 svg g rect {
  fill: #FFFFFF;
}

.c10 svg g tspan {
  stroke: transparent;
  fill: #FFFFFF;
}

.c10 svg > path {
  stroke: #FFFFFF;
}

.c10:hover {
  color: #FFFFFF;
  background-color: #D13C15;
  border: 2px solid #D13C15;
}

.c10:hover svg g,
.c10:hover svg g path,
.c10:hover svg g circle,
.c10:hover svg g rect {
  stroke: #FFFFFF;
}

.c10:hover svg g rect {
  fill: #FFFFFF;
}

.c10:hover svg g tspan {
  stroke: transparent;
  fill: #FFFFFF;
}

.c10:hover svg > path {
  stroke: #FFFFFF;
}

.c10:disabled {
  cursor: initial;
  color: #FFFFFF;
  background-color: #D13C15;
  border: 2px solid #D13C15;
}

.c10:disabled svg g,
.c10:disabled svg g path,
.c10:disabled svg g circle,
.c10:disabled svg g rect {
  stroke: #FFFFFF;
}

.c10:disabled svg g rect {
  fill: #FFFFFF;
}

.c10:disabled svg g tspan {
  stroke: transparent;
  fill: #FFFFFF;
}

.c10:disabled svg > path {
  stroke: #FFFFFF;
}

.c10:active:not(:disabled) {
  -webkit-transform: translateY(1px);
  -ms-transform: translateY(1px);
  transform: translateY(1px);
}

.c0 {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 100;
  padding: 24px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c0:before {
  content: "";
  z-index: -1;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  opacity: 0.6;
  background-color: #2F2F2F;
}

.c1 {
  background-color: #F3F3F3;
  max-width: 640px;
  margin-top: -100px;
  width: 100%;
  display: block;
  box-shadow: 0px 1px 2px rgba(10,27,56,0.08),0px 2px 4px rgba(10,27,56,0.12);
}

.c3 {
  padding: 32px 24px;
  max-height: calc(100vh - 250px);
  white-space: break-spaces;
  text-align: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  word-wrap: break-word;
  overflow: auto;
}

.c5 {
  margin-bottom: 24px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c7 {
  color: #D13C15;
  margin-bottom: 24px;
}

.c8 {
  height: 1px;
  background-color: #E3E3E3;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 16px 0;
}

@media (max-width:1199px) {
  .c3 {
    max-height: calc(100vh - 250px - 50px);
  }
}

<div>
  <div
    aria-hidden="true"
    data-focus-guard="true"
    data-focus-on-hidden="true"
    style="width: 1px; height: 0px; padding: 0px; overflow: hidden; position: fixed; top: 1px; left: 1px;"
    tabindex="0"
  />
  <div
    data-focus-lock-disabled="false"
  >
    <div
      class="c0"
      data-testid="modal-mask"
    >
      <div
        class="c1"
        role="dialog"
      >
        <div
          class="c2 c3"
        >
          <div
            class="c4 c5"
          >
            <svg>
              alert-fill.svg
            </svg>
          </div>
          <div
            class="c6 c7"
          >
            modalTitleTrKey
          </div>
          modalContentTrKey
          modalContent
        </div>
        <div
          class="c8"
        />
        <div
          class="c9"
        >
          <button
            class="c10"
            type="button"
          >
            OK
          </button>
        </div>
      </div>
    </div>
  </div>
  <div
    aria-hidden="true"
    data-focus-guard="true"
    data-focus-on-hidden="true"
    style="width: 1px; height: 0px; padding: 0px; overflow: hidden; position: fixed; top: 1px; left: 1px;"
    tabindex="0"
  />
</div>
`;

exports[`Modal should render the component 1`] = `
.c4 {
  display: inline-block;
  cursor: inherit;
}

.c4 > svg {
  width: 120px;
  height: 100%;
  display: block;
}

.c6 {
  font-weight: 600;
  font-size: 32px;
  line-height: 40px;
}

.c2 {
  font-weight: 400;
  font-size: 16px;
  line-height: 20px;
}

.c10 {
  -webkit-text-decoration: none;
  text-decoration: none;
  outline: 0px;
  cursor: pointer;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-width: 128px;
  max-width: 400px;
  height: 52px;
  padding-left: 32px;
  padding-right: 32px;
  font-size: 16px;
  font-weight: 700;
  line-height: 20px;
  text-align: center;
  color: #FFFFFF;
  background-color: #055A60;
  border: 2px solid #055A60;
}

.c10 svg g,
.c10 svg g path,
.c10 svg g circle,
.c10 svg g rect {
  stroke: #FFFFFF;
}

.c10 svg g rect {
  fill: #FFFFFF;
}

.c10 svg g tspan {
  stroke: transparent;
  fill: #FFFFFF;
}

.c10 svg > path {
  stroke: #FFFFFF;
}

.c10:hover {
  color: #FFFFFF;
  background-color: #181818;
  border: 2px solid #181818;
}

.c10:hover svg g,
.c10:hover svg g path,
.c10:hover svg g circle,
.c10:hover svg g rect {
  stroke: #FFFFFF;
}

.c10:hover svg g rect {
  fill: #FFFFFF;
}

.c10:hover svg g tspan {
  stroke: transparent;
  fill: #FFFFFF;
}

.c10:hover svg > path {
  stroke: #FFFFFF;
}

.c10:disabled {
  cursor: initial;
  color: #FFFFFF;
  background-color: #9BBDBF;
  border: 2px solid #9BBDBF;
}

.c10:disabled svg g,
.c10:disabled svg g path,
.c10:disabled svg g circle,
.c10:disabled svg g rect {
  stroke: #FFFFFF;
}

.c10:disabled svg g rect {
  fill: #FFFFFF;
}

.c10:disabled svg g tspan {
  stroke: transparent;
  fill: #FFFFFF;
}

.c10:disabled svg > path {
  stroke: #FFFFFF;
}

.c10:active:not(:disabled) {
  -webkit-transform: translateY(1px);
  -ms-transform: translateY(1px);
  transform: translateY(1px);
}

.c0 {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 100;
  padding: 24px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c0:before {
  content: "";
  z-index: -1;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  opacity: 0.6;
  background-color: #2F2F2F;
}

.c1 {
  background-color: #F3F3F3;
  max-width: 640px;
  margin-top: -100px;
  width: 100%;
  display: block;
  box-shadow: 0px 1px 2px rgba(10,27,56,0.08),0px 2px 4px rgba(10,27,56,0.12);
}

.c3 {
  padding: 32px 24px;
  max-height: calc(100vh - 250px);
  white-space: break-spaces;
  text-align: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  word-wrap: break-word;
  overflow: auto;
}

.c5 {
  margin-bottom: 24px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c7 {
  color: #055A60;
  margin-bottom: 24px;
}

.c8 {
  height: 1px;
  background-color: #E3E3E3;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 16px 0;
}

@media (max-width:1199px) {
  .c3 {
    max-height: calc(100vh - 250px - 50px);
  }
}

<div>
  <div
    aria-hidden="true"
    data-focus-guard="true"
    data-focus-on-hidden="true"
    style="width: 1px; height: 0px; padding: 0px; overflow: hidden; position: fixed; top: 1px; left: 1px;"
    tabindex="0"
  />
  <div
    data-focus-lock-disabled="false"
  >
    <div
      class="c0"
      data-testid="modal-mask"
    >
      <div
        class="c1"
        role="dialog"
      >
        <div
          class="c2 c3"
        >
          <div
            class="c4 c5"
          >
            <svg>
              alert-fill.svg
            </svg>
          </div>
          <div
            class="c6 c7"
          >
            modalTitleTrKey
          </div>
          modalContentTrKey
          modalContent
        </div>
        <div
          class="c8"
        />
        <div
          class="c9"
        >
          <button
            class="c10"
            type="button"
          >
            OK
          </button>
        </div>
      </div>
    </div>
  </div>
  <div
    aria-hidden="true"
    data-focus-guard="true"
    data-focus-on-hidden="true"
    style="width: 1px; height: 0px; padding: 0px; overflow: hidden; position: fixed; top: 1px; left: 1px;"
    tabindex="0"
  />
</div>
`;
